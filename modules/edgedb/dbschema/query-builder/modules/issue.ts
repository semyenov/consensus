// GENERATED by @edgedb/generate v0.5.4

import * as $ from "../reflection";
import * as _ from "../imports";
import type * as _default from "./default";
import type * as _std from "./std";
import type * as _tag from "./tag";
import type * as _project from "./project";
import type * as _finance from "./finance";
import type * as ___default from "./__default";
export type $IssuePriority = {
  "Low": $.$expr_Literal<$IssuePriority>;
  "Medium": $.$expr_Literal<$IssuePriority>;
  "High": $.$expr_Literal<$IssuePriority>;
  "Critical": $.$expr_Literal<$IssuePriority>;
} & $.EnumType<"issue::IssuePriority", ["Low", "Medium", "High", "Critical"]>;
const IssuePriority: $IssuePriority = $.makeType<$IssuePriority>(_.spec, "02038ddd-66b3-11ef-b7e3-2b4e3bccf656", _.syntax.literal);

export type $IssueStatus = {
  "Open": $.$expr_Literal<$IssueStatus>;
  "Closed": $.$expr_Literal<$IssueStatus>;
  "Merged": $.$expr_Literal<$IssueStatus>;
  "Reopened": $.$expr_Literal<$IssueStatus>;
  "Locked": $.$expr_Literal<$IssueStatus>;
  "Unlocked": $.$expr_Literal<$IssueStatus>;
  "Labeled": $.$expr_Literal<$IssueStatus>;
  "Unlabeled": $.$expr_Literal<$IssueStatus>;
  "Milestoned": $.$expr_Literal<$IssueStatus>;
  "Demilestoned": $.$expr_Literal<$IssueStatus>;
} & $.EnumType<"issue::IssueStatus", ["Open", "Closed", "Merged", "Reopened", "Locked", "Unlocked", "Labeled", "Unlabeled", "Milestoned", "Demilestoned"]>;
const IssueStatus: $IssueStatus = $.makeType<$IssueStatus>(_.spec, "01d6a08c-66b3-11ef-9ada-1dc2ad92fde1", _.syntax.literal);

export type $CommentλShape = $.typeutil.flatten<_default.$AuditableλShape & {
  "author": $.LinkDesc<_default.$User, $.Cardinality.One, {}, false, false,  false, false>;
  "issue": $.LinkDesc<$Issue, $.Cardinality.One, {}, false, false,  false, false>;
  "content": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "is_edited": $.PropertyDesc<_std.$bool, $.Cardinality.AtMostOne, false, false, false, true>;
  "<comments[is issue::Issue]": $.LinkDesc<$Issue, $.Cardinality.Many, {}, false, false,  false, false>;
  "<comments": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Comment = $.ObjectType<"issue::Comment", $CommentλShape, null, [
  ..._default.$Auditable['__exclusives__'],
]>;
const $Comment = $.makeType<$Comment>(_.spec, "03f5c7ba-66b3-11ef-947c-ab6011816b35", _.syntax.literal);

const Comment: $.$expr_PathNode<$.TypeSet<$Comment, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Comment, $.Cardinality.Many), null);

export type $IssueλShape = $.typeutil.flatten<_default.$BaseObjectλShape & _default.$AuditableλShape & _tag.$TaggableλShape & {
  "author": $.LinkDesc<_default.$User, $.Cardinality.One, {}, false, false,  false, true>;
  "status": $.PropertyDesc<$IssueStatus, $.Cardinality.One, false, false, false, true>;
  "assignee": $.LinkDesc<_default.$User, $.Cardinality.AtMostOne, {}, false, false,  false, false>;
  "story_points": $.PropertyDesc<_std.$int16, $.Cardinality.AtMostOne, false, false, false, false>;
  "priority": $.PropertyDesc<$IssuePriority, $.Cardinality.One, false, false, false, false>;
  "content": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "blocking_issues": $.LinkDesc<$Issue, $.Cardinality.Many, {}, false, false,  false, false>;
  "related_issues": $.LinkDesc<$Issue, $.Cardinality.Many, {}, false, false,  false, false>;
  "actual_hours": $.PropertyDesc<_std.$float64, $.Cardinality.AtMostOne, false, false, false, false>;
  "date_resolved": $.PropertyDesc<_std.$datetime, $.Cardinality.AtMostOne, false, false, false, false>;
  "estimated_hours": $.PropertyDesc<_std.$float64, $.Cardinality.AtMostOne, false, false, false, false>;
  "is_blocked": $.PropertyDesc<_std.$bool, $.Cardinality.AtMostOne, false, false, false, true>;
  "resolution_notes": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "time_spent": $.PropertyDesc<_std.$duration, $.Cardinality.AtMostOne, false, false, false, false>;
  "milestone": $.LinkDesc<_project.$Milestone, $.Cardinality.AtMostOne, {}, false, false,  false, false>;
  "comments": $.LinkDesc<$Comment, $.Cardinality.Many, {}, false, false,  false, false>;
  "labels": $.LinkDesc<$Label, $.Cardinality.Many, {}, false, false,  false, false>;
  "<blocking_issues[is issue::Issue]": $.LinkDesc<$Issue, $.Cardinality.Many, {}, false, false,  false, false>;
  "<related_issues[is issue::Issue]": $.LinkDesc<$Issue, $.Cardinality.Many, {}, false, false,  false, false>;
  "<issues[is project::Milestone]": $.LinkDesc<_project.$Milestone, $.Cardinality.Many, {}, false, false,  false, false>;
  "<issues[is project::Project]": $.LinkDesc<_project.$Project, $.Cardinality.Many, {}, false, false,  false, false>;
  "<associated_issue[is finance::Payment]": $.LinkDesc<_finance.$Payment, $.Cardinality.Many, {}, false, false,  false, false>;
  "<issues[is project::Sprint]": $.LinkDesc<_project.$Sprint, $.Cardinality.Many, {}, false, false,  false, false>;
  "<issue[is issue::Comment]": $.LinkDesc<$Comment, $.Cardinality.Many, {}, false, false,  false, false>;
  "<issues[is issue::Label]": $.LinkDesc<$Label, $.Cardinality.Many, {}, false, false,  false, false>;
  "<assigned_issues[is User]": $.LinkDesc<_default.$User, $.Cardinality.Many, {}, false, false,  false, false>;
  "<assigned_issues[is __default::current_user]": $.LinkDesc<___default.$current_user, $.Cardinality.Many, {}, false, false,  false, false>;
  "<assigned_issues[is current_user]": $.LinkDesc<_default.$current_user, $.Cardinality.Many, {}, false, false,  false, false>;
  "<assigned_issues": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<associated_issue": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<blocking_issues": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<issue": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<issues": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<related_issues": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Issue = $.ObjectType<"issue::Issue", $IssueλShape, null, [
  ..._default.$BaseObject['__exclusives__'],
  ..._default.$Auditable['__exclusives__'],
  ..._tag.$Taggable['__exclusives__'],
]>;
const $Issue = $.makeType<$Issue>(_.spec, "02039d2b-66b3-11ef-b4d6-d58013ed0210", _.syntax.literal);

const Issue: $.$expr_PathNode<$.TypeSet<$Issue, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Issue, $.Cardinality.Many), null);

export type $LabelλShape = $.typeutil.flatten<_default.$AuditableλShape & _default.$BaseObjectλShape & {
  "issues": $.LinkDesc<$Issue, $.Cardinality.Many, {}, false, false,  false, false>;
  "color": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "<labels[is issue::Issue]": $.LinkDesc<$Issue, $.Cardinality.Many, {}, false, false,  false, false>;
  "<labels": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Label = $.ObjectType<"issue::Label", $LabelλShape, null, [
  ..._default.$Auditable['__exclusives__'],
  ..._default.$BaseObject['__exclusives__'],
]>;
const $Label = $.makeType<$Label>(_.spec, "03f7bf7c-66b3-11ef-9893-45c4fff055dd", _.syntax.literal);

const Label: $.$expr_PathNode<$.TypeSet<$Label, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Label, $.Cardinality.Many), null);



export { IssuePriority, IssueStatus, $Comment, Comment, $Issue, Issue, $Label, Label };

type __defaultExports = {
  "IssuePriority": typeof IssuePriority;
  "IssueStatus": typeof IssueStatus;
  "Comment": typeof Comment;
  "Issue": typeof Issue;
  "Label": typeof Label
};
const __defaultExports: __defaultExports = {
  "IssuePriority": IssuePriority,
  "IssueStatus": IssueStatus,
  "Comment": Comment,
  "Issue": Issue,
  "Label": Label
};
export default __defaultExports;
