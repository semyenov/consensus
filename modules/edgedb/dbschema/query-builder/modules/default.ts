// GENERATED by @edgedb/generate v0.5.4

import * as $ from "../reflection";
import * as _ from "../imports";
import type * as _std from "./std";
import type * as _extauth from "./ext/auth";
import type * as _issue from "./issue";
import type * as _project from "./project";
import type * as _finance from "./finance";
export type $BaseObjectλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "description": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "name": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
}>;
type $BaseObject = $.ObjectType<"default::BaseObject", $BaseObjectλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
]>;
const $BaseObject = $.makeType<$BaseObject>(_.spec, "01d56d67-66b3-11ef-9037-111e71e99b3f", _.syntax.literal);

const BaseObject: $.$expr_PathNode<$.TypeSet<$BaseObject, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($BaseObject, $.Cardinality.Many), null);

export type $AuditableλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "created_at": $.PropertyDesc<_std.$datetime, $.Cardinality.One, false, false, false, true>;
  "updated_at": $.PropertyDesc<_std.$datetime, $.Cardinality.One, false, false, false, true>;
}>;
type $Auditable = $.ObjectType<"default::Auditable", $AuditableλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
]>;
const $Auditable = $.makeType<$Auditable>(_.spec, "01d3fddb-66b3-11ef-b261-958c71253210", _.syntax.literal);

const Auditable: $.$expr_PathNode<$.TypeSet<$Auditable, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Auditable, $.Cardinality.Many), null);

export type $UserλShape = $.typeutil.flatten<$BaseObjectλShape & $AuditableλShape & {
  "identity": $.LinkDesc<_extauth.$Identity, $.Cardinality.One, {}, false, false,  false, false>;
  "email": $.PropertyDesc<_std.$str, $.Cardinality.One, true, false, false, false>;
  "assigned_issues": $.LinkDesc<_issue.$Issue, $.Cardinality.Many, {}, false, true,  false, false>;
  "total_issues": $.PropertyDesc<_std.$int64, $.Cardinality.One, false, true, false, false>;
  "workload": $.PropertyDesc<_std.$int64, $.Cardinality.One, false, true, false, false>;
  "projects": $.LinkDesc<_project.$Project, $.Cardinality.Many, {}, false, true,  false, false>;
  "teams": $.LinkDesc<_project.$Team, $.Cardinality.Many, {}, false, true,  false, false>;
  "<owner[is finance::Budget]": $.LinkDesc<_finance.$Budget, $.Cardinality.Many, {}, false, false,  false, false>;
  "<author[is issue::Issue]": $.LinkDesc<_issue.$Issue, $.Cardinality.Many, {}, false, false,  false, false>;
  "<assignee[is issue::Issue]": $.LinkDesc<_issue.$Issue, $.Cardinality.Many, {}, false, false,  false, false>;
  "<owner[is project::Project]": $.LinkDesc<_project.$Project, $.Cardinality.AtMostOne, {}, true, false,  false, false>;
  "<created_by[is finance::Expense]": $.LinkDesc<_finance.$Expense, $.Cardinality.Many, {}, false, false,  false, false>;
  "<approved_by[is finance::Payment]": $.LinkDesc<_finance.$Payment, $.Cardinality.Many, {}, false, false,  false, false>;
  "<recipient[is finance::Payment]": $.LinkDesc<_finance.$Payment, $.Cardinality.Many, {}, false, false,  false, false>;
  "<owner[is project::Team]": $.LinkDesc<_project.$Team, $.Cardinality.Many, {}, false, false,  false, false>;
  "<members[is project::Team]": $.LinkDesc<_project.$Team, $.Cardinality.Many, {}, false, false,  false, false>;
  "<author[is issue::Comment]": $.LinkDesc<_issue.$Comment, $.Cardinality.Many, {}, false, false,  false, false>;
  "<approved_by": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<assignee": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<author": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<created_by": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<members": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<owner": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<recipient": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $User = $.ObjectType<"default::User", $UserλShape, null, [
  ...$BaseObject['__exclusives__'],
  ...$Auditable['__exclusives__'],
  {email: {__element__: _std.$str, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
]>;
const $User = $.makeType<$User>(_.spec, "01d6ac5b-66b3-11ef-9da6-3161e17e8156", _.syntax.literal);

const User: $.$expr_PathNode<$.TypeSet<$User, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($User, $.Cardinality.Many), null);

export type $current_userλShape = $.typeutil.flatten<$UserλShape & {
}>;
type $current_user = $.ObjectType<"default::current_user", $current_userλShape, null, [
  ...$User['__exclusives__'],
]>;
const $current_user = $.makeType<$current_user>(_.spec, "01e2d70d-66b3-11ef-a4b2-b947ef275fe1", _.syntax.literal);

const current_user: $.$expr_PathNode<$.TypeSet<$current_user, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($current_user, $.Cardinality.Many), null);

const $default__globals: {  current_user: _.syntax.$expr_Global<
              // "default::current_user",
              $current_user,
              $.Cardinality.AtMostOne
              >} = {  current_user: _.syntax.makeGlobal(
              "default::current_user",
              $.makeType(_.spec, "01e2d70d-66b3-11ef-a4b2-b947ef275fe1", _.syntax.literal),
              $.Cardinality.AtMostOne) as any};



export { $BaseObject, BaseObject, $Auditable, Auditable, $User, User, $current_user, current_user };

type __defaultExports = {
  "BaseObject": typeof BaseObject;
  "Auditable": typeof Auditable;
  "User": typeof User;
  "current_user": typeof current_user;
  "global": typeof $default__globals
};
const __defaultExports: __defaultExports = {
  "BaseObject": BaseObject,
  "Auditable": Auditable,
  "User": User,
  "current_user": current_user,
  "global": $default__globals
};
export default __defaultExports;
